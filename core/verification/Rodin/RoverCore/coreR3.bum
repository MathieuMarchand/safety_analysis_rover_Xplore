<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" version="5">
    <org.eventb.core.refinesMachine name="'" org.eventb.core.target="coreR2"/>
    <org.eventb.core.seesContext name="*" org.eventb.core.target="core_ctx1"/>
    <org.eventb.core.variable name="(" org.eventb.core.comment="current task executing on the rover" org.eventb.core.identifier="cur_task"/>
    <org.eventb.core.variable name="," org.eventb.core.comment="list of the number of instances of each module" org.eventb.core.identifier="instances"/>
    <org.eventb.core.variable name="7" org.eventb.core.comment="Total number of modules (except idle)" org.eventb.core.identifier="nbModules"/>
    <org.eventb.core.variable name="B" org.eventb.core.comment="Which module has been aborted" org.eventb.core.identifier="moduleAborted"/>
    <org.eventb.core.variable name="`" org.eventb.core.comment="Which module was running before the abort" org.eventb.core.identifier="beforeAbort"/>
    <org.eventb.core.variable name="L" org.eventb.core.comment="Boolean : Is the control station connected" org.eventb.core.identifier="CS_connected"/>
    <org.eventb.core.variable name="T" org.eventb.core.comment="List of modules, keeps track of which module is currently doing something" org.eventb.core.identifier="moduleOperating"/>
    <org.eventb.core.variable name="V" org.eventb.core.comment="List of modules, keeps track of which module is currently canceled" org.eventb.core.identifier="moduleCanceled"/>
    <org.eventb.core.variable name="[" org.eventb.core.comment="List of all tasks saying if the module is in initial state" org.eventb.core.identifier="moduleInInitPos"/>
    <org.eventb.core.variable name="a" org.eventb.core.comment="List of modules, keeps track of which module is currently launched" org.eventb.core.identifier="launchedModule"/>
    <org.eventb.core.variable name="t" org.eventb.core.comment="List of modules, keeps track of which module is currently paused" org.eventb.core.identifier="modulePaused"/>
    <org.eventb.core.variable name="v" org.eventb.core.comment="List of modules, keeps track of which module is currently resumed" org.eventb.core.identifier="moduleResumed"/>
    <org.eventb.core.variable name="x" org.eventb.core.comment="List of modules, keeps track of which module is currently unknown instr" org.eventb.core.identifier="moduleUnknownInstr"/>
    <org.eventb.core.variable name="z" org.eventb.core.comment="Task that has been requested for pause" org.eventb.core.identifier="pauseReq"/>
    <org.eventb.core.variable name="|" org.eventb.core.comment="Task that has been requested for resume" org.eventb.core.identifier="resumeReq"/>
    <org.eventb.core.variable name="~" org.eventb.core.comment="Task that has been requested for unknown" org.eventb.core.identifier="unknownReq"/>
    <org.eventb.core.variable name="'." org.eventb.core.comment="Boolean : Has the message been handled" org.eventb.core.identifier="messageHandled"/>
    <org.eventb.core.variable name="'0" org.eventb.core.comment="Boolean : Need to clear temporary values, done after each ROS message process" org.eventb.core.identifier="needClear"/>
    <org.eventb.core.variable name="'5" org.eventb.core.comment="Boolean : Has the navigation goal been changed" org.eventb.core.identifier="navigationGoalChanged"/>
    <org.eventb.core.variable name="'7" org.eventb.core.comment="Boolean : Has the navigation goal been called" org.eventb.core.identifier="navigationGoalCalled"/>
    <org.eventb.core.variable name="'D" org.eventb.core.comment="List of functions, has the message been transmited by the function" org.eventb.core.identifier="fwState"/>
    <org.eventb.core.event name="'E" org.eventb.core.comment="Initialisation of variables" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
        <org.eventb.core.action name="'" org.eventb.core.assignment="forwardTo ≔ {HD_mode↦FALSE, HD_semiauto_id↦FALSE, HD_element_id↦FALSE, HD_toggle_camera↦FALSE, HD_cancel_goal↦FALSE, CS_state↦FALSE, CS_telemetry↦FALSE, CS_instruction↦FALSE, NAV_goal↦FALSE, NAV_cancel_goal↦FALSE, HD_goal_id↦FALSE, undefined_func↦FALSE}" org.eventb.core.label="act17"/>
        <org.eventb.core.action name="(" org.eventb.core.assignment="needForward ≔ FALSE" org.eventb.core.label="act18"/>
        <org.eventb.core.action name=")" org.eventb.core.assignment="forwardedTo ≔ {HD_mode↦FALSE, HD_semiauto_id↦FALSE, HD_element_id↦FALSE, HD_toggle_camera↦FALSE, HD_cancel_goal↦FALSE, CS_state↦FALSE, CS_telemetry↦FALSE, CS_instruction↦FALSE, NAV_goal↦FALSE, NAV_cancel_goal↦FALSE, HD_goal_id↦FALSE, undefined_func↦FALSE}" org.eventb.core.label="act19"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'F" org.eventb.core.comment="Launch task event" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="launchTask">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="launchTask"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd11" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd12" org.eventb.core.predicate="forwardTo(CS_instruction) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(CS_instruction) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act11"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd13" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_instruction} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'G" org.eventb.core.comment="Abort task event" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="abortTask">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="abortTask"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd5" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd6" org.eventb.core.predicate="forwardTo(CS_instruction) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(CS_instruction) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act8"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd7" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_instruction} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'H" org.eventb.core.comment="Manual launch of the science module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="manualLaunchScience">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="manualLaunchScience"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'I" org.eventb.core.comment="Manual launch of the maintenance module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="manualLaunchMaintenance">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="manualLaunchMaintenance"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'J" org.eventb.core.comment="Manual launch of the navigation module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="manualLaunchNavigation">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="manualLaunchNavigation"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'K" org.eventb.core.comment="Manual launch of the manual module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="manualLaunchManual">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="manualLaunchManual"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'L" org.eventb.core.comment="Manual launch of the undefined module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="manualLaunchUndefinedTask">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="manualLaunchUndefinedTask"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'M" org.eventb.core.comment="Cancel task instruction" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="cancelTask">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="cancelTask"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd5" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd6" org.eventb.core.predicate="forwardTo(CS_instruction) = TRUE"/>
        <org.eventb.core.guard name="*" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd7" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_instruction} ⇒ forwardTo(f) = FALSE"/>
        <org.eventb.core.action name="+" org.eventb.core.assignment="forwardedTo(CS_instruction) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act6"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'N" org.eventb.core.comment="Connection to the control station event" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="connectionRequestCS">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="connectionRequestCS"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="needForward = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'O" org.eventb.core.comment="Forward of the navigation goal to the nav module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="forwardNavigationGoal">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="forwardNavigationGoal"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd5" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd6" org.eventb.core.predicate="forwardTo(NAV_goal) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(NAV_goal) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act9"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd7" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{NAV_goal} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'P" org.eventb.core.comment="Forward of the maintenance goal to the maintenance module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="forwardHDID">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="forwardHDID"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd7" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd8" org.eventb.core.predicate="forwardTo(HD_goal_id) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(HD_goal_id) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act7"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd9" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{HD_goal_id} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'Q" org.eventb.core.comment="Start the drill" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="launchDrill">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="launchDrill"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'R" org.eventb.core.comment="At an arbitrary time, the drill finished his job" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="drillEnded">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="drillEnded"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'S" org.eventb.core.comment="At an arbitrary time, the hd finished his job" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="hdToInit">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="hdToInit"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'T" org.eventb.core.comment="Pause a task event" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="pauseTask">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="pauseTask"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd3" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd4" org.eventb.core.predicate="forwardTo(CS_instruction) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(CS_instruction) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act6"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd5" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_instruction} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'U" org.eventb.core.comment="Resume a task event" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="resumeTask">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="resumeTask"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd3" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd4" org.eventb.core.predicate="forwardTo(CS_instruction) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(CS_instruction) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act6"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd5" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_instruction} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'V" org.eventb.core.comment="Receives an unknown instruction for a module" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="unknownInstrTask">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="unknownInstrTask"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd3" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd4" org.eventb.core.predicate="forwardTo(CS_instruction) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(CS_instruction) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act5"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd5" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_instruction} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'W" org.eventb.core.comment="Clear temporary variable for verification" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="clear">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="clear"/>
        <org.eventb.core.action name="(" org.eventb.core.assignment="forwardTo ≔ {HD_mode↦FALSE, HD_semiauto_id↦FALSE, HD_element_id↦FALSE, HD_toggle_camera↦FALSE, HD_cancel_goal↦FALSE, CS_state↦FALSE, CS_telemetry↦FALSE, CS_instruction↦FALSE, NAV_goal↦FALSE, NAV_cancel_goal↦FALSE, HD_goal_id↦FALSE, undefined_func↦FALSE}" org.eventb.core.label="act10"/>
        <org.eventb.core.action name=")" org.eventb.core.assignment="needForward ≔ FALSE" org.eventb.core.label="act11"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo ≔ {HD_mode↦FALSE, HD_semiauto_id↦FALSE, HD_element_id↦FALSE, HD_toggle_camera↦FALSE, HD_cancel_goal↦FALSE, CS_state↦FALSE, CS_telemetry↦FALSE, CS_instruction↦FALSE, NAV_goal↦FALSE, NAV_cancel_goal↦FALSE, HD_goal_id↦FALSE, undefined_func↦FALSE}" org.eventb.core.label="act12"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'X" org.eventb.core.comment="Forward the HD mode message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwHDmode">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwHDmode"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd6" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd7" org.eventb.core.predicate="forwardTo(HD_mode) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(HD_mode) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd8" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{HD_mode} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'Y" org.eventb.core.comment="Forward the HD semi auto id message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwHDSemiautoID">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwHDSemiautoID"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd6" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd7" org.eventb.core.predicate="forwardTo(HD_semiauto_id) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(HD_semiauto_id) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd8" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{HD_semiauto_id} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'Z" org.eventb.core.comment="Forward the HD element id message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwHDelementID">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwHDelementID"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd4" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd5" org.eventb.core.predicate="forwardTo(HD_element_id) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(HD_element_id) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd6" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{HD_element_id} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'[" org.eventb.core.comment="Forward the HD toggle camera state message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwHDtoggleCamera">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwHDtoggleCamera"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd4" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd5" org.eventb.core.predicate="forwardTo(HD_toggle_camera) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(HD_toggle_camera) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd6" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{HD_toggle_camera} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'\" org.eventb.core.comment="Forward the HD cancel goal message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwHDCancelGoal">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwHDCancelGoal"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd4" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd5" org.eventb.core.predicate="forwardTo(HD_cancel_goal) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(HD_cancel_goal) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd6" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{HD_cancel_goal} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="']" org.eventb.core.comment="Forward the state message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwCSstate">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwCSstate"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd4" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd5" org.eventb.core.predicate="forwardTo(CS_state) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(CS_state) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd6" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_state} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'^" org.eventb.core.comment="Forward the telemetry message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwCStelemetry">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwCStelemetry"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd4" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd5" org.eventb.core.predicate="forwardTo(CS_telemetry) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(CS_telemetry) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd6" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{CS_telemetry} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="'_" org.eventb.core.comment="Function to forward the message to" org.eventb.core.identifier="forwardTo"/>
    <org.eventb.core.invariant name="'`" org.eventb.core.label="type_forwardTo" org.eventb.core.predicate="forwardTo ∈ FORWARD_FUNCTIONS → BOOL"/>
    <org.eventb.core.event name="'j" org.eventb.core.comment="Forward the navigation goal message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fwNAVCancelGoal">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="fwNAVCancelGoal"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd4" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd5" org.eventb.core.predicate="forwardTo(NAV_cancel_goal) = TRUE"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardedTo(undefined_func) ≔ TRUE" org.eventb.core.comment="Records the message has been forwarded" org.eventb.core.label="act4"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd6" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{NAV_cancel_goal} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'i" org.eventb.core.comment="Undefined topic message" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="handleUndefinedFunctions">
        <org.eventb.core.refinesEvent name="'" org.eventb.core.target="handleUndefinedFunctions"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="needForward = TRUE"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Enabled if the message is intended to this event" org.eventb.core.label="grd3" org.eventb.core.predicate="forwardTo(undefined_func) = TRUE"/>
        <org.eventb.core.guard name="*" org.eventb.core.comment="Reset forward state" org.eventb.core.label="grd4" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS∖{undefined_func} ⇒ forwardTo(f) = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="'a" org.eventb.core.comment="Forward a ROS message to the corresponding function (to mimic the ROS behavior)" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="rosMessage">
        <org.eventb.core.parameter name="(" org.eventb.core.comment="Destination of the message" org.eventb.core.identifier="to"/>
        <org.eventb.core.guard name=")" org.eventb.core.comment="Function the message is destined to" org.eventb.core.label="grd1" org.eventb.core.predicate="to ∈ FORWARD_FUNCTIONS"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="forwardTo(to) ≔ TRUE" org.eventb.core.comment="Set the event the message is intended to" org.eventb.core.label="act1"/>
        <org.eventb.core.guard name="+" org.eventb.core.comment="Disables event if parameters need to be cleared" org.eventb.core.label="grd2" org.eventb.core.predicate="needClear = FALSE"/>
        <org.eventb.core.action name="," org.eventb.core.assignment="needForward ≔ TRUE" org.eventb.core.comment="Set the forwarding status" org.eventb.core.label="act2"/>
        <org.eventb.core.guard name="-" org.eventb.core.comment="Event enabled if no message is currently being forwarded" org.eventb.core.label="grd3" org.eventb.core.predicate="needForward = FALSE"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="'b" org.eventb.core.comment="Boolean : Used to deactivate all events except the receive message function, then only activates the right event" org.eventb.core.identifier="needForward"/>
    <org.eventb.core.invariant name="'c" org.eventb.core.label="type_needForward" org.eventb.core.predicate="needForward ∈ BOOL"/>
    <org.eventb.core.variable name="'d" org.eventb.core.comment="Function to which the message has been forwarded" org.eventb.core.identifier="forwardedTo"/>
    <org.eventb.core.invariant name="'e" org.eventb.core.label="type_forwardedTo" org.eventb.core.predicate="forwardedTo ∈ FORWARD_FUNCTIONS → BOOL"/>
    <org.eventb.core.invariant name="'q" org.eventb.core.comment="The messages have not been forwarded to if not asked" org.eventb.core.label="not_forwarded_if_not_asked" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS ∧ forwardTo(f) = FALSE ⇒ forwardedTo(f) = FALSE"/>
    <org.eventb.core.invariant name="'r" org.eventb.core.comment="forwardTo &amp; forwardedTo are cleared after clear" org.eventb.core.label="no_forward_nor_forwarded_after_clear" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS ∧ needForward = FALSE ⇒ forwardTo(f) = FALSE ∧ forwardedTo(f) = FALSE"/>
    <org.eventb.core.invariant name="'f" org.eventb.core.comment="R29-R39 : The forwarded message was forwarded by the correct ROS topic" org.eventb.core.label="forwarded_to_the_right_topic" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS ∧ forwardedTo(f) = TRUE ⇒ forwardTo(f) = TRUE"/>
    <org.eventb.core.invariant name="inv1" org.eventb.core.comment="R29-R39 : When receiving a message on a certain topic, it is forwarded to the right ROS topic" org.eventb.core.label="correctly_transmited_instruction" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS ∧ forwardTo(f) = TRUE ∧ needClear = TRUE ⇒ forwardedTo(f) = TRUE"/>
    <org.eventb.core.invariant name="'g" org.eventb.core.comment="R29-R39 : unknown messages are not forwarded" org.eventb.core.label="never_forwarded_to_unknown" org.eventb.core.predicate="forwardedTo(undefined_func) = FALSE"/>
    <org.eventb.core.invariant name="'h" org.eventb.core.comment="R40 : Messages that have been forwarded to the right function have been sent to the correct module" org.eventb.core.label="instructions_are_handled" org.eventb.core.predicate="∀f·f∈FORWARD_FUNCTIONS ∧ forwardedTo(f) = TRUE ∧ forwardTo(f) = TRUE ⇒ fwState(f) = TRUE"/>
    <org.eventb.core.invariant name="'k" org.eventb.core.comment="R41 : The rover doesnt go to an undefinded task" org.eventb.core.label="launching_undefined_task_does_nothing" org.eventb.core.predicate="launchedModule = undefined_task ⇒ ¬ cur_task = undefined_task"/>
    <org.eventb.core.invariant name="'m" org.eventb.core.comment="R42 : The messages are not handled if it is for NAV and we are not in NAV task" org.eventb.core.label="nav_not_forwarded" org.eventb.core.predicate="∀f·f∈{NAV_goal,NAV_cancel_goal} ∧ ¬ cur_task = navigation ∧ forwardedTo(f) = TRUE ⇒ messageHandled = FALSE"/>
    <org.eventb.core.invariant name="'o" org.eventb.core.comment="R42 : The messages are not handled if it is for HD and we are not in maintenance task" org.eventb.core.label="hd_not_forwarded" org.eventb.core.predicate="∀f·f∈{HD_mode, HD_semiauto_id, HD_element_id, HD_toggle_camera, HD_cancel_goal, HD_goal_id} ∧ ¬ cur_task = maintenance ∧ forwardedTo(f) = TRUE ⇒ messageHandled = FALSE"/>
    <org.eventb.core.invariant name="'l" org.eventb.core.comment="R43 : The messages are handled if it is for NAV and we are in NAV task" org.eventb.core.label="nav_forwarded" org.eventb.core.predicate="∀f·f∈{NAV_goal,NAV_cancel_goal} ∧ cur_task = navigation ∧ forwardedTo(f) = TRUE ⇒ messageHandled = TRUE"/>
    <org.eventb.core.invariant name="'n" org.eventb.core.comment="R43 : The messages are handled if it is for HD and we are in maintenance task" org.eventb.core.label="hd_forwarded" org.eventb.core.predicate="∀f·f∈{HD_mode, HD_semiauto_id, HD_element_id, HD_toggle_camera, HD_cancel_goal, HD_goal_id} ∧ cur_task = maintenance ∧ forwardedTo(f) = TRUE ⇒ messageHandled = TRUE"/>
    <org.eventb.core.invariant name="'p" org.eventb.core.comment="R43 : The messages are handled if it is for the control station" org.eventb.core.label="forwarded_to_CS" org.eventb.core.predicate="∀f·f∈{CS_state, CS_telemetry} ∧ forwardedTo(f) = TRUE ⇒ messageHandled = TRUE"/>
</org.eventb.core.machineFile>
